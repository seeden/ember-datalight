{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap b5778e5654d3c15fb8c3","./lib/model.js","./lib/adapter.js","./lib/index.js","external \"Ember\"*","./lib/modelbase.js","./lib/restadapter.js","./lib/promiseobject.js","./lib/promisearray.js","./lib/attribute.js","./lib/restserializer.js","./~/web-error/index.js","./lib/jsonserializer.js","./~/web-error/~/base-error/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;ACTA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA,wC;;;;;;;;;;;;;CCvCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ,IAAG;AACH,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA,gCAA+B;AAC/B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAM;AACN;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA,EAAC,E;;;;CCzHD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;AACA,EAAC,E;;;;CCxED;;AAEA;;AAEA;;AAEA,EAAC,E;;;;CCND,gD;;;;CCAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA,kB;AACA;;AAEA,IAAG;;AAEH,uB;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,IAAG;;AAEH;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,GAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,oBAAmB;AACnB;AACA,IAAG;AACH,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,IAAG;;AAEH;AACA,GAAE;;AAEF;AACA;AACA,+BAA8B;AAC9B;AACA,G;AACA,EAAC,E;;;;CCxGD;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAY;AACZ;AACA;AACA,sCAAqC;;AAErC;AACA;;AAEA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;;AAEA,qDAAoD,cAAc;AAClE;AACA,IAAG;AACH,GAAE;;;AAGF;AACA;;AAEA;AACA,GAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA,6CAA4C,kBAAkB;;AAE9D,sDAAqD,aAAa;AAClE,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,iBAAiB;;AAE7D,yDAAwD,aAAa;AACrE,GAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAE;;;;AAIF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ,IAAG;AACH,GAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;;AAErC;AACA,GAAE;;AAEF;AACA;AACA;AACA,4C;AACA;;AAEA;;AAEA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA,oB;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA,EAAC,E;;;;CCxLD;;AAEA;;AAEA;AACA,mCAAkC;AAClC,EAAC,E;;;;CCND;;AAEA;;AAEA,sF;;;;CCJA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,G;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,I;;AAEA;AACA,GAAE;AACF,G;;;;CC7HA;;AAEA;AACA;AACA;;AAEA;;AAEA,EAAC,E;;;;CCRD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,I;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAC,S;;;;CCnFD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA,iB;;AAEA;AACA,mD;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;;AAEA,eAAc,qBAAqB;AACnC;AACA;;AAEA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,IAAG;AACH,GAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC,E;;;;CCjFD;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oC;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAC,S","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Ember\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Ember\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ember-datalight\"] = factory(require(\"Ember\"));\n\telse\n\t\troot[\"ember-datalight\"] = factory(root[\"Ember\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn ","\n// The module cache\nvar installedModules = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(installedModules[moduleId])\n\t\treturn installedModules[moduleId].exports;\n\t\n\t// Create a new module (and put it into the cache)\n\tvar module = installedModules[moduleId] = {\n\t\texports: {},\n\t\tid: moduleId,\n\t\tloaded: false\n\t};\n\t\n\t// Execute the module function\n\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\t\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = modules;\n\n// expose the module cache\n__webpack_require__.c = installedModules;\n\n// __webpack_public_path__\n__webpack_require__.p = \"/public/dist/\";\n\n\n// Load entry module and return exports\nreturn __webpack_require__(0);","'use strict';\r\n\r\nvar Ember = require('ember'),\r\n\tPromise = Ember.RSVP.Promise,\r\n\tWebError = require('web-error'),\r\n\tDataLight = require('./index'),\r\n\tModelBase = require('./modelbase'),\r\n\tRESTAdapter = require('./restadapter'),\r\n\tPromiseObject = require('./promiseobject'),\r\n\tPromiseArray = require('./promisearray'),\r\n\tattribute = require('./attribute');\r\n\r\nvar Model = module.exports = DataLight.Model = ModelBase.extend({\r\n\tadapter: function() {\r\n\t\treturn this.constructor.adapter;\r\n\t}.property(),\r\n\r\n\tsave: function() {\r\n\t\tvar self = this;\r\n\t\tvar adapter = this.get('adapter');\r\n\t\tvar isDeleted = this.get('isDeleted');\r\n\t\tif(isDeleted) {\r\n\t\t\treturn this.destroyRecord();\r\n\t\t}\r\n\r\n\t\tif(this.get('isNew')) {\r\n\t\t\treturn adapter.createRecord(this.constructor, this).then(function() {\r\n\t\t\t\tself.set('isNew', false);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn adapter.updateRecord(this.constructor, this);\r\n\t},\r\n\r\n\tdestroyRecord: function() {\r\n\t\tvar self = this;\r\n\t\tvar isNew = this.get('isNew');\r\n\t\tvar isDestroyed = this.get('isDestroyed');\r\n\t\tvar adapter = this.get('adapter');\r\n\r\n\t\tthis.set('isDeleted', true);\r\n\r\n\t\treturn new Ember.RSVP.Promise(function(resolve, reject) {\r\n\t\t\tif(isDestroyed) {\r\n\t\t\t\treturn resolve();\t\r\n\t\t\t}\r\n\r\n\t\t\tif(isNew) {\r\n\t\t\t\tself.destroy();\r\n\t\t\t\treturn resolve();\r\n\t\t\t}\r\n\r\n\t\t\tadapter.deleteRecord(self.constructor, self).then(function() {\r\n\t\t\t\tself.destroy();\r\n\t\t\t}).then(resolve, reject);\r\n\t\t});\r\n\t},\r\n\r\n\tdeleteRecord: function() {\r\n\t\tthis.set('isDeleted', true);\r\n\t},\r\n\r\n\treloadRecord: function() {\r\n\t\t//TODO\r\n\t},\r\n\r\n\tisEmpty: function (keyName) {\r\n\t\tvar str = this.get(keyName);\r\n\t\treturn Ember.isEmpty(str);\r\n\t},\r\n\r\n\tisBlank: function(keyName) {\r\n\t\tvar str = this.get(keyName);\r\n\t\treturn Ember.isBlank(str);\r\n\t}\r\n});\r\n\r\nModel.reopenClass({\r\n\tadapter: RESTAdapter.create({}),\r\n\tattribute: attribute,\r\n\r\n\tprimaryKey: 'id',\r\n\ttype: null,\r\n\r\n\tfind: function(id) {\r\n\t\tvar type = Ember.typeOf(id);\r\n\r\n\t\tif (type === 'undefined') {\r\n      \t\treturn this.findAll();\r\n    \t} else if (type === 'object') {\r\n\t\t\treturn this.findQuery(id);\r\n\t\t} else if (type === 'array') {\r\n\t\t\treturn this.findMany(id);\r\n\t\t}\r\n\r\n\t\treturn PromiseObject.create({\r\n\t\t\tpromise: Promise.cast(this.adapter.find(this, id))\r\n\t\t});\r\n\t},\r\n\r\n\tfindAll: function(sinceToken) {\r\n\t\treturn PromiseArray.create({\r\n\t\t\tpromise: this.adapter.findAll(this, sinceToken)\r\n\t\t});\r\n\t},\r\n\r\n\tfindQuery: function(query) {\r\n\t\treturn PromiseArray.create({\r\n\t\t\tpromise: this.adapter.findQuery(this, query)\r\n\t\t});\r\n\t},\r\n\r\n\tfindMany: function(ids) {\r\n\t\treturn PromiseArray.create({\r\n\t\t\tpromise: this.adapter.findMany(this, ids)\r\n\t\t});\r\n\t},\r\n\r\n\tpush: function() {\r\n\t\tEmber.Logger.warn('Method push needs cached version of models');\r\n\t}\r\n});","'use strict';\r\n\r\nvar Ember = require('ember'),\r\n\tDataLight = require('./index'),\r\n\tPromiseArray = require('./promisearray'),\r\n\tmap = Ember.EnumerableUtils.map,\r\n\tRSVP = Ember.RSVP,\r\n\tPromise = RSVP.Promise;\r\n\r\nvar Adapter = module.exports = DataLight.Adapter = Ember.Object.extend({\r\n\tserializer: null,\r\n\r\n\r\n\tfind: Ember.required(Function),\r\n\r\n\t/**\r\n\tThe `findAll()` method is called when you call `find` on the store\r\n\twithout an ID (i.e. `store.find('post')`).\r\n\t*/\r\n\tfindAll: null,\r\n\r\n\t/**\r\n\tThis method is called when you call `find` on the store with a\r\n\tquery object as the second parameter (i.e. `store.find('person', {\r\n\tpage: 1 })`).\r\n\t*/\r\n\tfindQuery: null,\r\n\r\n\r\n\t/**\r\n\tProxies to the serializer's `serialize` method.\r\n\t*/\r\n\tserialize: Ember.required(Function),\r\n\r\n\r\n\t/**\r\n\tImplement this method in a subclass to handle the creation of\r\n\tnew records.\r\n\t*/\r\n\tcreateRecord: Ember.required(Function),\r\n\r\n\t/**\r\n\tImplement this method in a subclass to handle the updating of\r\n\ta record.\r\n\t*/\r\n\tupdateRecord: Ember.required(Function),\r\n\r\n\r\n\t/**\r\n\t * Implement this method in a subclass to handle the deletion of\r\n\t * a record.\r\n\t */\r\n\tdeleteRecord: Ember.required(Function),\r\n\r\n\r\n\t/**\r\n\tFind multiple records at once.\r\n\r\n\tBy default, it loops over the provided ids and calls `find` on each.\r\n\tMay be overwritten to improve performance and reduce the number of\r\n\tserver requests.\r\n\t*/\r\n\tfindMany: function(model, ids) {\r\n\t\tvar self = this;\r\n\t\tvar promise = Ember.RSVP.all(map(ids, function(id) {\r\n\t\t\treturn self.find(model, id);\r\n\t\t}));\r\n\r\n\t\treturn PromiseArray.create({\r\n\t\t\tpromise: Promise.cast(promise)\r\n\t\t});\r\n\t}\r\n});","'use strict';\r\n\r\nvar Ember = require('ember');\r\n\r\nvar DataLight = module.exports = Ember.Namespace.create({\r\n\r\n});","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;","'use strict';\r\n\r\nvar Ember = require('ember'),\r\n\tDataLight = require('./index');\r\n\r\nvar ModelBase = module.exports = DataLight.ModelBase = Ember.Object.extend({\r\n\t__data: null,\r\n\t__attributes: null,\r\n\r\n\tisNew: false,\r\n\tisDeleted: false,\r\n\r\n\tattributes: function() {\r\n\t\tvar map = Ember.Map.create();\r\n\r\n\t\tthis.constructor.eachComputedProperty(function(name, meta) {\r\n\t\t\tif (!meta.isAttribute) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmap.set(name, meta);\r\n\t\t});\r\n\r\n\t\treturn map;\r\n\t},\r\n\r\n\tisDirty: function() {\r\n\t\tvar dirtyCount = 0;\r\n\r\n\t\tthis.attributes().forEach(function(name, meta) {\r\n\t\t\tif(meta.isDirty(this, name)) {\r\n\t\t\t\tdirtyCount++;\t\r\n\t\t\t}\r\n\r\n\t\t}, this);\r\n\r\n\t\treturn dirtyCount>0; \r\n\t},\r\n\r\n\tdirtyAttributes: function() {\r\n\t\tvar dirty = Ember.Map.create();\r\n\r\n\t\tthis.attributes().forEach(function(name, meta) {\r\n\t\t\tif(meta.isObject) {\r\n\t\t\t\tvar dirtyAttributes = this.get(name).dirtyAttributes();\r\n\t\t\t\tif(dirtyAttributes.length>0) {\r\n\t\t\t\t\tdirty.set(name, dirtyAttributes);\r\n\t\t\t\t}\r\n\t\t\t} else if(meta.isDirty(this, name)) {\r\n\t\t\t\tdirty.set(name, this.get(name));\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\treturn dirty;\r\n\t},\r\n\r\n\trollback: function() {\r\n\t\tthis.__attributes = {};\r\n\r\n\t\tthis.attributes().forEach(function(name, meta) {\r\n\t\t\tif(meta.isObject) {\r\n\t\t\t\tthis.get(name).rollback();\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\tthis.set('isDirty', false);\r\n\t},\r\n\r\n\tsaved: function() {\r\n\t\tfor(var key in this.__attributes) {\r\n\t\t\tthis.__data[key] = this.__attributes[key];\r\n\t\t}\r\n\r\n\t\tthis.setProperties({\r\n\t\t\t__attributes: {},\r\n\t\t\tisNew: false\r\n\t\t});\r\n\t},\r\n\r\n\ttoJSON: function(fn) {\r\n\t\tvar properties = {};\r\n\r\n\t\t//get attributes\r\n\t\tthis.attributes().forEach(function(name, meta) {\r\n\t\t\tif(fn && fn(name, meta) === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(meta.isObject) {\r\n\t\t\t\tproperties[name] = meta.subModel.toJSON(fn);\r\n\t\t\t} else {\r\n\t\t\t\r\n\t\t\t\tproperties[name] = meta.getValue(this, name);\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\treturn properties;\r\n\t},\r\n\r\n\tcopy: function() {\r\n\t\tvar properties = this.getProperties(['__data', '__attributes', 'isNew', 'isDeleted']);\r\n\t\tvar data = Ember.$.extend({}, properties);\r\n\t\treturn this.constructor.create(data);\r\n\t}\t\r\n});","'use strict';\r\n\r\nvar Ember = require('ember'),\r\n\tWebError = require('web-error'),\r\n\tDataLight = require('./index'),\r\n\tAdapter = require('./adapter'),\r\n\tRESTSerializer = require('./restserializer');\r\n\r\n\r\nvar type = {\r\n\tGET: 'GET',\r\n\tPOST: 'POST',\r\n\tPUT: 'PUT',\r\n\tDELETE: 'DELETE'\r\n};\r\n\r\nvar RESTAdapter = module.exports = DataLight.RESTAdapter = Ember.Object.extend({\r\n\theaders: {},\r\n\thost: null,\r\n\tnamespace: null,\r\n\tserializer: RESTSerializer.create({}),\r\n\r\n\tfind: function(Model, id) {\r\n\t\tvar serializer = this.get('serializer');\r\n\r\n\t\treturn this.ajax(this.buildURL(Model, id), type.GET).then(function(data) {\r\n\t\t\treturn serializer.deserialize(Model, data);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\tThe `findAll()` method is called when you call `find` on the store\r\n\twithout an ID (i.e. `store.find('post')`).\r\n\t*/\r\n\tfindAll: function(Model, sinceToken) {\r\n\t\tvar query;\r\n\r\n    \tif (sinceToken) {\r\n      \t\tquery = {\r\n      \t\t\tsince: sinceToken\r\n      \t\t};\r\n    \t}\r\n\r\n\t\treturn this.findQuery(Model, query);\r\n\t},\r\n\r\n\t/**\r\n\tThis method is called when you call `find` on the store with a\r\n\tquery object as the second parameter (i.e. `store.find('person', {\r\n\tpage: 1 })`).\r\n\t*/\r\n\tfindQuery: function(Model, query) {\r\n\t\tvar serializer = this.get('serializer');\r\n\r\n\t\treturn this.ajax(this.buildURL(Model), type.GET, { data: query }).then(function(data) {\r\n\t\t\treturn serializer.deserialize(Model, data, true);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\tserialize: function(Model, record, options) {\r\n\t\toptions = options || {};\r\n\r\n\t\treturn this.get('serializer').serialize(Model, record, options);\r\n\t},\r\n\r\n\r\n\t/**\r\n\tImplement this method in a subclass to handle the creation of\r\n\tnew records.\r\n\t*/\r\n\tcreateRecord: function(Model, record) {\r\n\t\tvar data = this.serialize(Model, record, { type: type.POST });\r\n\r\n\t\treturn this.ajax(this.buildURL(Model), type.POST, { data: data });\r\n\t},\r\n\r\n\t/**\r\n\tImplement this method in a subclass to handle the updating of\r\n\ta record.\r\n\t*/\r\n\tupdateRecord: function(Model, record) {\r\n\t\tvar id = record.get(Model.primaryKey);\r\n\t\tvar data = this.serialize(Model, record, { type: type.PUT });\r\n\r\n\t\treturn this.ajax(this.buildURL(Model, id), type.PUT, { data: data });\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Implement this method in a subclass to handle the deletion of\r\n\t * a record.\r\n\t */\r\n\tdeleteRecord: function(Model, record) {\r\n\t\tvar id = record.get(Model.primaryKey);\r\n\r\n\t\treturn this.ajax(this.buildURL(Model, id), type.DELETE);\r\n\t},\r\n\r\n\r\n\r\n\tajax: function(url, type, options) {\r\n\t\tvar self = this;\r\n\t\tvar options = this._ajaxOptions(url, type, options);\r\n\r\n\t\treturn new Ember.RSVP.Promise(function (resolve, reject) {\r\n\t\t\tEmber.$.ajax(options).then(function(data) {\r\n\t\t\t\tEmber.run(null, resolve, data);\r\n\t\t\t}, function(response) {\r\n\t\t\t\tEmber.run(null, reject, self._responseToError(response));\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\t_prepareURL: function(url) {\r\n\t\tvar host = this.get('host');\r\n\t\tvar namespace = this.get('namespace');\r\n\r\n\t\tif(namespace) {\r\n\t\t\turl = namespace + url;\r\n\t\t}\r\n\r\n\t\tif(host) {\r\n\t\t\turl = host + url;\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t},\r\n\r\n\t_ajaxOptions: function(url, type, options) {\r\n\t\toptions = options || {};\r\n\t\toptions.url = this._prepareURL(url);\r\n\t\toptions.type = type;\r\n\t\toptions.dataType = 'json';\r\n\t\toptions.context = this;\r\n\t\toptions.headers = Ember.$.extend({}, this.get('headers'), options.headers);\r\n\r\n\t\treturn options;\r\n\t},\r\n\r\n\t_responseToError: function(response) {\r\n\t\tvar message = response.responseTest || response.statusText || 'Unknown error';\r\n\t\tif(response.responseJSON && response.responseJSON.message) {\r\n\t\t\tmessage = response.responseJSON.message;    \r\n\t\t}\r\n\r\n\t\tvar status = response.status || 500;\r\n\r\n\t\tconsole.log(message);\r\n\t\treturn new WebError(status, message);\r\n\t},\r\n\r\n\tbuildURL: function(Model, id) {\r\n\t\tvar url = '/' + this.pathForType(Model);\r\n\t\tif(id) {\r\n\t\t\turl += '/' + id;\t\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t},\r\n\r\n\tpathForType: function(Model) {\r\n\t\tif(!Model.type) {\r\n\t\t\tthrow new Error('Model type is undefined');\r\n\t\t}\r\n\r\n\t\treturn Model.type+'s';\r\n\t},\r\n\r\n\tGET: function(url, options) {\r\n\t\treturn this.ajax(url, type.GET, options);\r\n\t},\r\n\r\n\tPOST: function(url, options) {\r\n\t\treturn this.ajax(url, type.POST, options);\r\n\t},\r\n\r\n\tPUT: function(url, options) {\r\n\t\treturn this.ajax(url, type.PUT, options);\r\n\t},\r\n\r\n\tDELETE: function(url, options) {\r\n\t\treturn this.ajax(url, type.DELETE, options);\r\n\t}\r\n});","'use strict';\r\n\r\nvar Ember = require('ember');\r\n\r\nvar PromiseObject = module.exports = Ember.ObjectProxy.extend(Ember.PromiseProxyMixin, {\r\n\t//content: Ember.Object.create({})\r\n});","'use strict';\r\n\r\nvar Ember = require('ember');\r\n\r\nvar PromiseArray = module.exports = Ember.ArrayProxy.extend(Ember.PromiseProxyMixin);","var Ember = require('ember'),\r\n\tDataLight = require('./index'),\r\n\tModelBase = require('./modelbase');\r\n\r\nfunction isDirty(obj, key) {\r\n\tvar meta = obj.constructor.metaForProperty(key);\r\n\tif(meta.isObject) {\r\n\t\treturn meta.subModel.isDirty();\r\n\t}\r\n\r\n\treturn (typeof obj.__attributes[key] !== 'undefined');\r\n}\r\n\r\nfunction getValue(obj, key, deserialize, useRelationship) {\r\n\tvar meta = obj.constructor.metaForProperty(key);\r\n\tvar options = meta.options;\r\n\tvar value = null;\r\n\r\n\t//return latest unsaved value\r\n\tif(typeof obj.__attributes[key] !== 'undefined') {\r\n\t\tvalue = obj.__attributes[key];\r\n\t} else if(typeof obj.__data[key] !== 'undefined') {\r\n\t \t//return saved value\r\n\t\tvalue = obj.__data[key];\r\n\t} else if(typeof options.defaultValue === 'function') {\r\n\t\t//return default value from function\r\n\t\tvalue = options.defaultValue(obj, key);\r\n\t} else {\r\n\t\tvalue = options.defaultValue;\r\n\t}\r\n\r\n\tvar isDefined = typeof value !== 'undefined';\r\n\r\n\tif(isDefined && useRelationship && options.belongsTo) {\r\n\t\tvar model = options.belongsTo;\r\n\r\n\t\treturn meta.isArray \r\n\t\t\t? model.findMany(value)\r\n\t\t\t: model.find(value);\r\n\t}\r\n\r\n\tif(meta.type && meta.type.deserialize) {\r\n\t\treturn meta.type.deserialize(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction typeCast(value, type) {\r\n\tvar types = [String, Number, Boolean, Date];\r\n\tvar valueType = Ember.typeOf(value);\r\n\r\n\tif(!type) {\r\n\t\treturn value;\r\n\t} \r\n\r\n\tif(typeof value === 'undefined') {\r\n\t\treturn 'undefined';\r\n\t}\r\n\r\n\tif(type === Array) {\r\n\t\treturn (valueType==='array')\r\n\t\t\t? value\r\n\t\t\t: [value];\r\n\t}\r\n\r\n\tif(types.contains(type)) {\r\n\t\treturn type(value);\r\n\t}\r\n\r\n\treturn type.serialize(value);\r\n}\r\n\r\nmodule.exports = DataLight.Attribute = function attribute(type, options) {\r\n\toptions = options || {};\r\n\toptions.readOnly = options.readOnly || false;\r\n\toptions.belongsTo = options.belongsTo || false;\r\n\r\n\tvar isObject = (type !== null && typeof type === 'object');\r\n\r\n\tif(isObject) {\r\n\t\tvar SubModel = ModelBase.extend(type);\r\n\t\tvar subModel = SubModel.create({});\r\n\t}\r\n\r\n\tvar meta = {\r\n\t\ttype: type,\r\n\t\toptions: options,\r\n\t\tisObject: isObject,\r\n\t\tsubModel: subModel,\r\n\t\tisArray: Ember.typeOf(type) === 'array',\r\n\t\tisAttribute: true,\r\n\t\tisDirty: isDirty,\r\n\t\tgetValue: getValue\r\n\t};\r\n\r\n\treturn Ember.computed('__data', '__attributes', function(key, value) {\r\n\t\tif(!this.__attributes) {\r\n\t\t\tthis.__attributes = {};\r\n\t\t}\r\n\r\n\t\tif(!this.__data) {\r\n\t\t\tthis.__data = {};\r\n\t\t}\r\n\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tif(options.readOnly) {\r\n\t\t\t\tthrow new Error('Property ' + key + ' is read only');\r\n\t\t\t}\r\n\r\n\t\t\tif(isObject) {\r\n\t\t\t\tsubModel.setProperties(value);\r\n\t\t\t} else {\r\n\t\t\t\tvalue = typeCast(value, type);\r\n\r\n\t\t\t\tif(typeof this.__data[key] === 'undefined' || this.__data[key] !== value) {\r\n\t\t\t\t\tthis.__attributes[key] = value;\r\n\t\t\t\t} else if(typeof this.__attributes[key] !== 'undefined') {\r\n\t\t\t\t\tdelete this.__attributes[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n\r\n\t\treturn isObject ? subModel : getValue(this, key, true, true);\r\n\t}).meta(meta);\r\n};","'use strict';\r\n\r\nvar Ember = require('ember'),\r\n\tDataLight = require('./index'),\r\n\tJSONSerializer = require('./jsonserializer');\r\n\r\nvar RESTSerializer = module.exports = DataLight.RESTSerializer = JSONSerializer.extend({\r\n\t\r\n});","(function (root) {\r\n\t'use strict';\r\n\r\n\tfunction defineWebError (BaseError) {\r\n\t\tfunction WebError (status, message, constructorOpt) {\r\n\t\t\tthis.status = status || 500;\r\n\t\t\tmessage = message || STATUS_CODES[this.status];\r\n\r\n\t\t\tBaseError.call(this, message, constructorOpt || WebError);\r\n\t\t}\r\n\r\n\t\tWebError.prototype = new BaseError(); \r\n\t\tWebError.prototype.name = 'WebError';\r\n\t\tWebError.STATUS_CODES = STATUS_CODES;\r\n\r\n\t\treturn WebError;\r\n\t}\r\n\r\n\tvar STATUS_CODES = {\r\n\t\t400: \"Bad Request\",\r\n\t\t401: \"Unauthorized\",\r\n\t\t402: \"Payment Required\",\r\n\t\t403: \"Forbidden\",\r\n\t\t404: \"Not Found\",\r\n\t\t405: \"Method Not Allowed\",\r\n\t\t406: \"Not Acceptable\",\r\n\t\t407: \"Proxy Authentication Required\",\r\n\t\t408: \"Request Timeout\",\r\n\t\t409: \"Conflict\",\r\n\t\t410: \"Gone\",\r\n\t\t411: \"Length Required\",\r\n\t\t412: \"Precondition Failed\",\r\n\t\t413: \"Request Entity Too Large\",\r\n\t\t414: \"Request-URI Too Long\",\r\n\t\t415: \"Unsupported Media Type\",\r\n\t\t416: \"Requested Range Not Satisfiable\",\r\n\t\t417: \"Expectation Failed\",\r\n\t\t418: \"I'm a Teapot\", // (RFC 2324) http://tools.ietf.org/html/rfc2324\r\n\t\t420: \"Enhance Your Calm\", // Returned by the Twitter Search and Trends API when the client is being rate limited\r\n\t\t422: \"Unprocessable Entity\", // (WebDAV) (RFC 4918)\r\n\t\t423: \"Locked\", // (WebDAV) (RFC 4918)\r\n\t\t424: \"Failed Dependency\", // (WebDAV) (RFC 4918)\r\n\t\t425: \"Unordered Collection\", // (RFC 3648)\r\n\t\t426: \"Upgrade Required\", // (RFC 2817)\r\n\t\t428: \"Precondition Required\",\r\n\t\t429: \"Too Many Requests\", // Used for rate limiting\r\n\t\t431: \"Request Header Fields Too Large\",\r\n\t\t444: \"No Response\", // An nginx HTTP server extension. The server returns no information to the client and closes the connection (useful as a deterrent for malware).\r\n\t\t449: \"Retry With\", // A Microsoft extension. The request should be retried after performing the appropriate action.\r\n\t\t450: \"Blocked By Windows Parental Controls\",\r\n\t\t499: \"Client Closed Request\",\r\n\t\t500: \"Internal Server Error\",\r\n\t\t501: \"Not Implemented\",\r\n\t\t502: \"Bad Gateway\",\r\n\t\t503: \"Service Unavailable\",\r\n\t\t504: \"Gateway Timeout\",\r\n\t\t505: \"HTTP Version Not Supported\",\r\n\t\t506: \"Variant Also Negotiates\",\r\n\t\t507: \"Insufficient Storage\",\r\n\t\t508: \"Loop Detected\",\r\n\t\t509: \"Bandwidth Limit Exceeded\",\r\n\t\t510: \"Not Extended\",\r\n\t\t511: \"Network Authentication Required\"\r\n\t};\t\r\n\r\n\t//Exports\r\n\t//AMD\r\n\tif (typeof define !== 'undefined' && define.amd) {\r\n\t\tdefine(['base-error'], function (BaseError) {\r\n\t\t\treturn defineWebError(BaseError);\r\n\t\t});\r\n\t}\r\n\r\n\t//CommonJS\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = defineWebError(require('base-error'));\r\n\t}\r\n\r\n\t//Script tag\r\n\telse {\r\n\t\troot.WebError = defineWebError(root.BaseError);\r\n\t}\r\n\r\n} (this));","'use strict';\r\n\r\nvar Ember = require('ember'),\r\n\tDataLight = require('./index');\r\n\r\nvar JSONSerializer = module.exports = DataLight.JSONSerializer = Ember.Object.extend({\r\n\tserialize: function(Model, record, options) {\r\n\t\treturn record.toJSON(function(key, meta) {\r\n\t\t\tif(options.type === 'PUT' && meta.options.put === false) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tdeserialize: function(Model, data, isArray) {\r\n\t\tisArray = isArray || false;\r\n\r\n\t\tvar field = this.fieldForType(Model, isArray);\r\n\t\tvar modelData = data[field];\r\n\r\n\t\tif(isArray) {\r\n\t\t\treturn this._deserializeArray(Model, modelData, data);\r\n\t\t}\r\n\t\t\r\n\t\treturn this._deserializeSingle(Model, modelData, data);\r\n\t},\r\n\r\n\t_deserializeSingle: function(Model, modelData, content, disableDR) {\r\n\t\tvar model = Model.create(modelData);\r\n\r\n\t\tmodel.set('content', content);\r\n\t\tmodel.saved();\t\r\n\r\n\t\tif(!disableDR) {\r\n\t\t\tthis._deserializeRelationships(Model, content);\t\r\n\t\t}\r\n\t\t\r\n\t\treturn model;\r\n\t},\r\n\r\n\t_deserializeArray: function(Model, modelDatas, content) {\r\n\t\tvar models = [];\r\n\r\n\t\tfor(var i=0; i<modelDatas.length; i++) {\r\n\t\t\tmodels.push(this._deserializeSingle(Model, modelDatas[i], content, true));\r\n\t\t}\r\n\r\n\t\tthis._deserializeRelationships(Model, content, true);\r\n\t\r\n\t\treturn models;\r\n\t},\r\n\r\n\t_deserializeRelationships: function(Model, content, isArray) {\r\n\t\tvar self = this;\r\n\t\tvar used = {};\r\n\r\n\t\tModel.eachComputedProperty(function(name, meta) {\r\n\t\t\tif(!meta.options || !meta.options.belongsTo) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar Model = meta.options.belongsTo;\r\n\t\t\tvar type = self.fieldForType(Model, isArray);\r\n\r\n\t\t\tif(!type || !content || used[type] || !content[type]) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tused[type] = true;\r\n\r\n\t\t\tModel.push(content[type]);\r\n\t\t});\r\n\t},\r\n\r\n\tfieldForType: function(Model, isArray) {\r\n\t\tif(!Model.type) {\r\n\t\t\tthrow new Error('Model type is undefined');\r\n\t\t}\r\n\r\n\t\treturn isArray ? Model.type+'s' : Model.type;\r\n\t}\r\n});","(function (root) {\r\n\t'use strict';\r\n\r\n\tfunction BaseError (message, constructorOpt) {\r\n\t\tthis.captureStackTrace(constructorOpt || BaseError);\r\n\t\tthis.message = message;\r\n\t}\r\n\r\n\tBaseError.prototype = new Error(); \r\n\tBaseError.prototype.name = 'BaseError';\r\n\r\n\tBaseError.prototype.captureStackTrace = function(constructorOpt) {\r\n\t\tif(Error.captureStackTrace) {\r\n\t\t\tError.captureStackTrace(this, constructorOpt);\r\n\t\t} else {\r\n\t\t\tvar err = new Error();\r\n\t\t\tthis.stack = err.stack;\r\n\t\t}\r\n\t};\r\n\r\n\t//Exports\r\n\t//AMD\r\n\tif (typeof define !== 'undefined' && define.amd) {\r\n\t\tdefine([], function () {\r\n\t\t\treturn BaseError;\r\n\t\t});\r\n\t}\r\n\r\n\t//CommonJS\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = BaseError;\r\n\t}\r\n\r\n\t//Script tag\r\n\telse {\r\n\t\troot.BaseError = BaseError;\r\n\t}\r\n\r\n} (this));"],"sourceRoot":"webpack-module://"}